# Question Service
QUESTION_DB_CLOUD_URI=<FILL-THIS-IN>
QUESTION_DB_LOCAL_URI=mongodb://question-db:27017/question
QUESTION_DB_USERNAME=user
QUESTION_DB_PASSWORD=password

# RabbitMQ URL
RABBITMQ_URL=amqp://match-broker:5672

# User Service
USER_DB_CLOUD_URI=<FILL-THIS-IN>
USER_DB_LOCAL_URI=mongodb://user-db:27017/user
USER_DB_USERNAME=user
USER_DB_PASSWORD=password

# Room Service
COLLAB_CLOUD_MONGO_URI=mongodb+srv://<username>:<password>@cluster0.h5ukw.mongodb.net/collaboration-service?retryWrites=true&w=majority&appName=Cluster0
COLLAB_LOCAL_MONGO_URI=mongodb://collaboration-db:27017/collaboration-service

# Collaboration Service (Yjs Documents)
YJS_CLOUD_MONGO_URI=mongodb+srv://<username>:<password>@cluster0.h5ukw.mongodb.net/yjs-documents?retryWrites=true&w=majority&appName=Cluster0
YJS_LOCAL_MONGO_URI=mongodb://collaboration-db:27017/yjs-documents

# URL for Question Service
QUESTION_SERVICE_URL=http://question:8081/

# MongoDB username and password for Collaboration and Room Service
DB_USERNAME=<username>
DB_PASSWORD=<password>

# Port configuration for the service (8084 for WebSocket (Collab) and 8087 for HTTP (Room))
WS_PORT: 8084
HTTP_PORT: 8087

# CORS origin configuration
CORS_ORIGIN=*

# Match Service
MATCH_DB_CLOUD_URI=<FILL-THIS-IN>
MATCH_DB_LOCAL_URI=mongodb://match-db:27017/match
MATCH_DB_USERNAME=user
MATCH_DB_PASSWORD=password

# Will use cloud MongoDB Atlas database
ENV=PROD

# Secret for creating JWT signature
JWT_SECRET=you-can-replace-this-with-your-own-secret

# Node environment
NODE_ENV=development