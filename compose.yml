services:
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - 4200:4200
    restart: always
  
  gateway:
    container_name: gateway
    image: nginx:1.27
    ports:
      - 8080:8080
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - gateway-network
  
  question:
    container_name: question
    image: question
    build:
      context: services/question
      dockerfile: Dockerfile
    environment:
      DB_CLOUD_URI: ${QUESTION_DB_CLOUD_URI}
      DB_LOCAL_URI: ${QUESTION_DB_LOCAL_URI}
      DB_USERNAME: ${QUESTION_DB_USERNAME}
      DB_PASSWORD: ${QUESTION_DB_PASSWORD}
    networks:
      - gateway-network
      - question-db-network
    restart: always

  question-db:
    container_name: question-db
    image: mongo:7.0.14
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${QUESTION_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${QUESTION_DB_PASSWORD}
    volumes:
      - question-db:/data/db
      - ./services/question/init-mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - question-db-network
    command: --quiet
    restart: always

  user:
    container_name: user
    image: user
    build:
      context: services/user
      dockerfile: Dockerfile
    environment:
      USER_SERVICE_CLOUD_URI: ${USER_SERVICE_CLOUD_URI}
      USER_SERVICE_LOCAL_URI: ${USER_SERVICE_LOCAL_URI}
      ENV: ${ENV}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - gateway-network
    restart: always

volumes:
  question-db:

networks:
  gateway-network:
    driver: bridge
  question-db-network:
    driver: bridge